pipeline {
    agent any

    environment {
        DOCKERHUB_USER = "abbashafiz09"
        APP_NAME      = "anycater"
        APP_PORT      = "3000"
        EC2_USER      = "ubuntu"
        EC2_HOST      = "98.81.4.37"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/AbbasHafiz/AnyCater.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $DOCKERHUB_USER/$APP_NAME:${BUILD_NUMBER} .'
            }
        }

        stage('Push to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-token', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                    sh 'docker push $DOCKERHUB_USER/$APP_NAME:${BUILD_NUMBER}'
                }
            }
        }

        stage('Test SSH Connection') {
            steps {
                sshagent(['deploy-key']) {
                    sh 'ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST "echo SSH agent works!"'
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                sshagent(['deploy-key']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST \\
                        "docker pull $DOCKERHUB_USER/$APP_NAME:\${BUILD_NUMBER} &&
                         docker stop $APP_NAME || true &&
                         docker rm $APP_NAME || true &&
                         docker run -d --name $APP_NAME -p $APP_PORT:$APP_PORT $DOCKERHUB_USER/$APP_NAME:\${BUILD_NUMBER}"
                    """
                }
            }
        }
    }

    post {
        always {
            echo "Build #${BUILD_NUMBER} finished"
        }
        failure {
            echo "Build #${BUILD_NUMBER} failed!"
        }
    }
}
